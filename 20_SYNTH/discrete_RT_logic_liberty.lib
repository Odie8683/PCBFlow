/*
  Basic logic cells for a logic family based on discrete NPN transistors (Resistor Transistor Logic)
  BUF

Logic gates:
  NOT
  NOR2
  NOR3

D-Flop:
  DFF
*/


library(SingleLogicCells) {
  
  cell(BUF) {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }

  cell(rt_TBUF_N) {
    area: 3;
    pin(A) { direction: input; }
    pin(nE) { direction: input; }
    pin(Y) { direction: output;
        function : "A";
        three_state : "~nE"; }
  }

  cell(rt_NOT) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }

  cell(rt_NOR2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }

  cell(rt_NOR3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C)'"; }
  }
/*
  cell(rt_XOR2) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A^B)"; }
  }

  cell(rt_DFF7T) {
    area: 7;
    ff(IQ, IQN) { clocked_on: C;
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }
*/
/*
// PH-Master Slave FF
  cell(rt_DFF) {
    area: 16;
    ff(IQ, IQN) { clocked_on: C;
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }
*/

// Falling edge clock: C'

    cell(rt_DFF6NOR_NP) {
    area: 13;
    ff(IQ, IQN) { clocked_on: "C'";
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input;
             nextstate_type: data;  }
    pin(Q) { direction: output;
              function: "IQ"; }
    pin(QN) { direction: output;
              function: "IQN"; }
   }

// Clocked on falling edge, SYNC CLR is high active
    cell(rt_DFF6NOR_NPCLR) {
    area: 15;
    ff(IQ, IQN) { clocked_on: "C'";
                  next_state: "D";
                  clear: "CLR"; }
    pin(C) { direction: input;
                 clock: true; }
    pin(CLR) { direction: input; }    
    pin(D) { direction: input;
             nextstate_type: data;  }
    pin(Q) { direction: output;
              function: "IQ"; }
    pin(QN) { direction: output;
              function: "IQN"; }
   }



// Clocked on falling edge, SYNC SET is high active
    cell(rt_DFF6NOR_NPSET) {
    area: 14;
    ff(IQ, IQN) { clocked_on: "C'";
                  preset: "SET";
                  next_state: "D"; }
    pin(C) { direction: input;
                 clock: true; }
    pin(SET) { direction: input; }    
    pin(D) { direction: input;
             nextstate_type: data;  }
    pin(Q) { direction: output;
              function: "IQ"; }
    pin(QN) { direction: output;
              function: "IQN"; }
   }

}
