/*
  Basic logic cells for a logic family based on discrete NPN transistors (Resistor Transistor Logic)
  BUF

Logic gates:
  NOT
  NOR2
  NOR3

D-Flop:
  DFF
*/


library(SingleLogicCells) {
  
  cell(BUF) {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
  
    cell(TBUF) {
    area: 1;
    pin(A) { direction: input; }
    pin(E) { direction: input; }
    pin(Y) { direction: output;
        function : "A";
        three_state : "E"; }
  }

  cell(rtpg_NOT) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }

  cell(rtpg_NOR2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }

  cell(rtpg_NOR3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C)'"; }
  }

  cell(rtpg_NOR4) {
      area: 4;
      pin(A) { direction: input; }
      pin(B) { direction: input; }
      pin(C) { direction: input; }
      pin(D) { direction: input; }
      pin(Y) { direction: output;
               function: "(A+B+C+D)'"; }
    }
  

  cell(rtpg_XOR2) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A^B)"; }
  }
/*
  cell(rtpg_DFF7T) {
    area: 7;
    ff(IQ, IQN) { clocked_on: "nC'";
                  next_state: D; }
    pin(nC) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }
*/  

  cell(rtpg_DFF7T_PN) {
    area: 7;
    ff(IQ, IQN) { clocked_on: "nC'";
                  next_state: D; }
    pin(nC) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
    pin(QN) { direction: output;
              function: "IQN"; }
  }

}
