/*
  Basic logic cells for a logic family based on discrete nmos transistors and bipolar transitors used as pass gate
  BUF

Logic gates:
  NOT
  NOR2
  NOR3

D-Flop:
  DFF
*/


library(SingleLogicCells) {
  
  cell(BUF) {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
 
  cell(nm_NOT) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }


  cell(nm_NAND2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)'"; }
  }

  cell(nm_NAND3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C)'"; }
  }

  cell(nm_AOI2_2) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "((A*B)+(C*D))'"; }
  }

cell(nm_AOI1_2) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+(B*C))'"; }
  }

  cell(nm_AOI2_2_2) {
    area: 6;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(Y) { direction: output;
             function: "((A*B)+(C*D)+(E*F))'"; }
  }

  cell(nm_NOR2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }

  cell(nm_NOR3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C)'"; }
  }

  cell(hy_XOR2) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A^B)"; }
  }

  cell(hy_DFF7T) {
    area: 7;
    ff(IQ, IQN) { clocked_on: C;
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }


}
